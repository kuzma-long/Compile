
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "BREAK DIVISION ELSE ELSIF FOR IF LEN LESS NUMBER PLUS PRINT VARIABLE WHILEprogram : statementsstatements : statements statement\n                  | statement statement : assignment\n                  | operation\n                  | print\n                  | if\n                  | while\n                  | for\n    assignment : VARIABLE '=' NUMBER\n                  | VARIABLE '=' VARIABLE\n                  | VARIABLE '=' '[' numbers ']'\n                  | VARIABLE '=' VARIABLE '[' VARIABLE ']'\n                  | VARIABLE '[' VARIABLE ']' '=' VARIABLE\n                  | VARIABLE '[' VARIABLE ']' '=' VARIABLE '[' VARIABLE ']'\n    numbers : numbers ',' NUMBER\n               | NUMBER\n    operation : VARIABLE '=' expression\n                 | VARIABLE '=' LEN '(' VARIABLE ')'\n                 | VARIABLE PLUS\n    expression : expression '+' term\n                  | expression '-' term\n                  | term\n    term : term '*' factor\n            | term '/' factor\n            | term DIVISION factor\n            | factor\n    factor : VARIABLE\n              | '(' expression ')'\n              | NUMBER\n    print : PRINT '(' VARIABLE ')' if : IF '(' condition ')' '{' statements '}'\n           | IF '(' condition ')' '{' statements '}' ELSIF '(' condition ')' '{' statements '}' ELSE '{' BREAK '}'\n    condition : VARIABLE '>' VARIABLE\n                 | VARIABLE '<' VARIABLE\n                 | VARIABLE LESS VARIABLE\n                 | VARIABLE '[' VARIABLE ']' '>' VARIABLE\n                 | VARIABLE '[' VARIABLE ']' '<' VARIABLE\n    while : WHILE '(' condition ')' '{' statements '}' for : FOR '(' assignment ';' condition ';' operation ')' '{' statements '}' "
    
_lr_action_items = {'VARIABLE':([0,2,3,4,5,6,7,8,9,15,16,17,18,19,20,21,22,23,24,26,28,29,30,38,41,42,43,45,46,47,48,49,51,53,54,55,56,58,59,61,63,64,66,67,68,69,70,71,76,80,82,83,84,86,87,88,89,90,91,92,100,101,102,103,105,107,108,109,114,],[10,10,-3,-4,-5,-6,-7,-8,-9,-2,23,31,-20,32,34,34,37,-11,-10,-18,45,-23,-27,60,45,45,65,-28,-30,45,45,45,-31,72,73,74,75,34,78,-12,-21,-22,-29,-24,-25,-26,83,10,10,-13,-19,-14,10,10,94,95,-32,97,98,-39,45,-15,34,10,10,-40,10,10,-33,]),'PRINT':([0,2,3,4,5,6,7,8,9,15,18,23,24,26,29,30,45,46,51,61,63,64,66,67,68,69,71,76,80,82,83,84,86,89,92,101,103,105,107,108,109,114,],[11,11,-3,-4,-5,-6,-7,-8,-9,-2,-20,-11,-10,-18,-23,-27,-28,-30,-31,-12,-21,-22,-29,-24,-25,-26,11,11,-13,-19,-14,11,11,-32,-39,-15,11,11,-40,11,11,-33,]),'IF':([0,2,3,4,5,6,7,8,9,15,18,23,24,26,29,30,45,46,51,61,63,64,66,67,68,69,71,76,80,82,83,84,86,89,92,101,103,105,107,108,109,114,],[12,12,-3,-4,-5,-6,-7,-8,-9,-2,-20,-11,-10,-18,-23,-27,-28,-30,-31,-12,-21,-22,-29,-24,-25,-26,12,12,-13,-19,-14,12,12,-32,-39,-15,12,12,-40,12,12,-33,]),'WHILE':([0,2,3,4,5,6,7,8,9,15,18,23,24,26,29,30,45,46,51,61,63,64,66,67,68,69,71,76,80,82,83,84,86,89,92,101,103,105,107,108,109,114,],[13,13,-3,-4,-5,-6,-7,-8,-9,-2,-20,-11,-10,-18,-23,-27,-28,-30,-31,-12,-21,-22,-29,-24,-25,-26,13,13,-13,-19,-14,13,13,-32,-39,-15,13,13,-40,13,13,-33,]),'FOR':([0,2,3,4,5,6,7,8,9,15,18,23,24,26,29,30,45,46,51,61,63,64,66,67,68,69,71,76,80,82,83,84,86,89,92,101,103,105,107,108,109,114,],[14,14,-3,-4,-5,-6,-7,-8,-9,-2,-20,-11,-10,-18,-23,-27,-28,-30,-31,-12,-21,-22,-29,-24,-25,-26,14,14,-13,-19,-14,14,14,-32,-39,-15,14,14,-40,14,14,-33,]),'$end':([1,2,3,4,5,6,7,8,9,15,18,23,24,26,29,30,45,46,51,61,63,64,66,67,68,69,80,82,83,89,92,101,107,114,],[0,-1,-3,-4,-5,-6,-7,-8,-9,-2,-20,-11,-10,-18,-23,-27,-28,-30,-31,-12,-21,-22,-29,-24,-25,-26,-13,-19,-14,-32,-39,-15,-40,-33,]),'}':([3,4,5,6,7,8,9,15,18,23,24,26,29,30,45,46,51,61,63,64,66,67,68,69,80,82,83,84,86,89,92,101,105,107,109,113,114,],[-3,-4,-5,-6,-7,-8,-9,-2,-20,-11,-10,-18,-23,-27,-28,-30,-31,-12,-21,-22,-29,-24,-25,-26,-13,-19,-14,89,92,-32,-39,-15,107,-40,110,114,-33,]),'=':([10,37,50,94,],[16,59,70,100,]),'[':([10,16,23,34,37,59,78,83,],[17,25,38,56,17,25,38,88,]),'PLUS':([10,94,],[18,18,]),'(':([11,12,13,14,16,27,28,41,42,47,48,49,96,100,],[19,20,21,22,28,43,28,28,28,28,28,28,102,28,]),'NUMBER':([16,25,28,41,42,47,48,49,59,62,100,],[24,40,46,46,46,46,46,46,79,81,46,]),'LEN':([16,100,],[27,27,]),')':([18,26,29,30,32,33,35,44,45,46,63,64,65,66,67,68,69,72,73,74,82,93,97,98,104,],[-20,-18,-23,-27,51,52,57,66,-28,-30,-21,-22,82,-29,-24,-25,-26,-34,-35,-36,-19,99,-37,-38,106,]),'*':([23,24,29,30,45,46,63,64,66,67,68,69,],[-28,-30,47,-27,-28,-30,47,47,-29,-24,-25,-26,]),'/':([23,24,29,30,45,46,63,64,66,67,68,69,],[-28,-30,48,-27,-28,-30,48,48,-29,-24,-25,-26,]),'DIVISION':([23,24,29,30,45,46,63,64,66,67,68,69,],[-28,-30,49,-27,-28,-30,49,49,-29,-24,-25,-26,]),'+':([23,24,26,29,30,44,45,46,63,64,66,67,68,69,],[-28,-30,41,-23,-27,41,-28,-30,-21,-22,-29,-24,-25,-26,]),'-':([23,24,26,29,30,44,45,46,63,64,66,67,68,69,],[-28,-30,42,-23,-27,42,-28,-30,-21,-22,-29,-24,-25,-26,]),']':([31,39,40,60,75,81,95,],[50,61,-17,80,85,-16,101,]),'>':([34,85,],[53,90,]),'<':([34,85,],[54,91,]),'LESS':([34,],[55,]),';':([36,61,72,73,74,77,78,79,80,83,97,98,101,],[58,-12,-34,-35,-36,87,-11,-10,-13,-14,-37,-38,-15,]),',':([39,40,81,],[62,-17,-16,]),'{':([52,57,99,106,111,],[71,76,103,108,112,]),'ELSIF':([89,],[96,]),'ELSE':([110,],[111,]),'BREAK':([112,],[113,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statements':([0,71,76,103,108,],[2,84,86,105,109,]),'statement':([0,2,71,76,84,86,103,105,108,109,],[3,15,3,3,15,15,3,15,3,15,]),'assignment':([0,2,22,71,76,84,86,103,105,108,109,],[4,4,36,4,4,4,4,4,4,4,4,]),'operation':([0,2,71,76,84,86,87,103,105,108,109,],[5,5,5,5,5,5,93,5,5,5,5,]),'print':([0,2,71,76,84,86,103,105,108,109,],[6,6,6,6,6,6,6,6,6,6,]),'if':([0,2,71,76,84,86,103,105,108,109,],[7,7,7,7,7,7,7,7,7,7,]),'while':([0,2,71,76,84,86,103,105,108,109,],[8,8,8,8,8,8,8,8,8,8,]),'for':([0,2,71,76,84,86,103,105,108,109,],[9,9,9,9,9,9,9,9,9,9,]),'expression':([16,28,100,],[26,44,26,]),'term':([16,28,41,42,100,],[29,29,63,64,29,]),'factor':([16,28,41,42,47,48,49,100,],[30,30,30,30,67,68,69,30,]),'condition':([20,21,58,102,],[33,35,77,104,]),'numbers':([25,],[39,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statements','program',1,'p_program','py_yacc.py',18),
  ('statements -> statements statement','statements',2,'p_statements','py_yacc.py',25),
  ('statements -> statement','statements',1,'p_statements','py_yacc.py',26),
  ('statement -> assignment','statement',1,'p_statement','py_yacc.py',37),
  ('statement -> operation','statement',1,'p_statement','py_yacc.py',38),
  ('statement -> print','statement',1,'p_statement','py_yacc.py',39),
  ('statement -> if','statement',1,'p_statement','py_yacc.py',40),
  ('statement -> while','statement',1,'p_statement','py_yacc.py',41),
  ('statement -> for','statement',1,'p_statement','py_yacc.py',42),
  ('assignment -> VARIABLE = NUMBER','assignment',3,'p_assignment','py_yacc.py',50),
  ('assignment -> VARIABLE = VARIABLE','assignment',3,'p_assignment','py_yacc.py',51),
  ('assignment -> VARIABLE = [ numbers ]','assignment',5,'p_assignment','py_yacc.py',52),
  ('assignment -> VARIABLE = VARIABLE [ VARIABLE ]','assignment',6,'p_assignment','py_yacc.py',53),
  ('assignment -> VARIABLE [ VARIABLE ] = VARIABLE','assignment',6,'p_assignment','py_yacc.py',54),
  ('assignment -> VARIABLE [ VARIABLE ] = VARIABLE [ VARIABLE ]','assignment',9,'p_assignment','py_yacc.py',55),
  ('numbers -> numbers , NUMBER','numbers',3,'p_numbers','py_yacc.py',71),
  ('numbers -> NUMBER','numbers',1,'p_numbers','py_yacc.py',72),
  ('operation -> VARIABLE = expression','operation',3,'p_operation','py_yacc.py',84),
  ('operation -> VARIABLE = LEN ( VARIABLE )','operation',6,'p_operation','py_yacc.py',85),
  ('operation -> VARIABLE PLUS','operation',2,'p_operation','py_yacc.py',86),
  ('expression -> expression + term','expression',3,'p_expression','py_yacc.py',100),
  ('expression -> expression - term','expression',3,'p_expression','py_yacc.py',101),
  ('expression -> term','expression',1,'p_expression','py_yacc.py',102),
  ('term -> term * factor','term',3,'p_term','py_yacc.py',114),
  ('term -> term / factor','term',3,'p_term','py_yacc.py',115),
  ('term -> term DIVISION factor','term',3,'p_term','py_yacc.py',116),
  ('term -> factor','term',1,'p_term','py_yacc.py',117),
  ('factor -> VARIABLE','factor',1,'p_factor','py_yacc.py',129),
  ('factor -> ( expression )','factor',3,'p_factor','py_yacc.py',130),
  ('factor -> NUMBER','factor',1,'p_factor','py_yacc.py',131),
  ('print -> PRINT ( VARIABLE )','print',4,'p_print','py_yacc.py',146),
  ('if -> IF ( condition ) { statements }','if',7,'p_if','py_yacc.py',152),
  ('if -> IF ( condition ) { statements } ELSIF ( condition ) { statements } ELSE { BREAK }','if',18,'p_if','py_yacc.py',153),
  ('condition -> VARIABLE > VARIABLE','condition',3,'p_condition','py_yacc.py',178),
  ('condition -> VARIABLE < VARIABLE','condition',3,'p_condition','py_yacc.py',179),
  ('condition -> VARIABLE LESS VARIABLE','condition',3,'p_condition','py_yacc.py',180),
  ('condition -> VARIABLE [ VARIABLE ] > VARIABLE','condition',6,'p_condition','py_yacc.py',181),
  ('condition -> VARIABLE [ VARIABLE ] < VARIABLE','condition',6,'p_condition','py_yacc.py',182),
  ('while -> WHILE ( condition ) { statements }','while',7,'p_while','py_yacc.py',191),
  ('for -> FOR ( assignment ; condition ; operation ) { statements }','for',11,'p_for','py_yacc.py',199),
]
