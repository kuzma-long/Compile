Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> query
Rule 1     query -> select
Rule 2     query -> LP query RP
Rule 3     select -> SELECT list FROM table
Rule 4     select -> SELECT list FROM table WHERE lst
Rule 5     select -> SELECT list FROM table ORDER BY list
Rule 6     select -> SELECT list FROM table WHERE lst ORDER BY list
Rule 7     table -> NAME
Rule 8     table -> LP query RP
Rule 9     table -> NAME AS NAME
Rule 10    table -> table AS NAME
Rule 11    table -> table COMMA table
Rule 12    lst -> condition
Rule 13    lst -> condition AND condition
Rule 14    lst -> condition OR condition
Rule 15    lst -> NAME BETWEEN NUMBER AND NUMBER
Rule 16    lst -> NAME IN LP query RP
Rule 17    condition -> NAME < agg
Rule 18    condition -> NAME > agg
Rule 19    condition -> NAME = agg
Rule 20    condition -> agg > NUMBER
Rule 21    condition -> agg = NUMBER
Rule 22    condition -> agg < NUMBER
Rule 23    condition -> NAME < NUMBER
Rule 24    condition -> NAME > NUMBER
Rule 25    condition -> NAME = NUMBER
Rule 26    condition -> NAME < NAME
Rule 27    condition -> NAME = NAME
Rule 28    condition -> NAME > NAME
Rule 29    condition -> NUMBER < NUMBER
Rule 30    condition -> NUMBER > NUMBER
Rule 31    condition -> NUMBER = NUMBER
Rule 32    condition -> agg < agg
Rule 33    condition -> agg > agg
Rule 34    condition -> agg = agg
Rule 35    agg -> SUM LP NAME RP
Rule 36    agg -> AVG LP NAME RP
Rule 37    agg -> COUNT LP NAME RP
Rule 38    agg -> MIN LP NAME RP
Rule 39    agg -> MAX LP NAME RP
Rule 40    agg -> COUNT LP * RP
Rule 41    list -> *
Rule 42    list -> NAME
Rule 43    list -> agg
Rule 44    list -> NAME DOT NAME

Terminals, with rules where they appear

*                    : 40 41
<                    : 17 22 23 26 29 32
=                    : 19 21 25 27 31 34
>                    : 18 20 24 28 30 33
AND                  : 13 15
AS                   : 9 10
AVG                  : 36
BETWEEN              : 15
BY                   : 5 6
COMMA                : 11
COUNT                : 37 40
DOT                  : 44
FROM                 : 3 4 5 6
IN                   : 16
LP                   : 2 8 16 35 36 37 38 39 40
MAX                  : 39
MIN                  : 38
NAME                 : 7 9 9 10 15 16 17 18 19 23 24 25 26 26 27 27 28 28 35 36 37 38 39 42 44 44
NUMBER               : 15 15 20 21 22 23 24 25 29 29 30 30 31 31
OR                   : 14
ORDER                : 5 6
RP                   : 2 8 16 35 36 37 38 39 40
SELECT               : 3 4 5 6
SUM                  : 35
WHERE                : 4 6
error                : 

Nonterminals, with rules where they appear

agg                  : 17 18 19 20 21 22 32 32 33 33 34 34 43
condition            : 12 13 13 14 14
list                 : 3 4 5 5 6 6
lst                  : 4 6
query                : 2 8 16 0
select               : 1
table                : 3 4 5 6 10 11 11

Parsing method: LALR

state 0

    (0) S' -> . query
    (1) query -> . select
    (2) query -> . LP query RP
    (3) select -> . SELECT list FROM table
    (4) select -> . SELECT list FROM table WHERE lst
    (5) select -> . SELECT list FROM table ORDER BY list
    (6) select -> . SELECT list FROM table WHERE lst ORDER BY list

    LP              shift and go to state 3
    SELECT          shift and go to state 4

    query                          shift and go to state 1
    select                         shift and go to state 2

state 1

    (0) S' -> query .



state 2

    (1) query -> select .

    $end            reduce using rule 1 (query -> select .)
    RP              reduce using rule 1 (query -> select .)


state 3

    (2) query -> LP . query RP
    (1) query -> . select
    (2) query -> . LP query RP
    (3) select -> . SELECT list FROM table
    (4) select -> . SELECT list FROM table WHERE lst
    (5) select -> . SELECT list FROM table ORDER BY list
    (6) select -> . SELECT list FROM table WHERE lst ORDER BY list

    LP              shift and go to state 3
    SELECT          shift and go to state 4

    query                          shift and go to state 5
    select                         shift and go to state 2

state 4

    (3) select -> SELECT . list FROM table
    (4) select -> SELECT . list FROM table WHERE lst
    (5) select -> SELECT . list FROM table ORDER BY list
    (6) select -> SELECT . list FROM table WHERE lst ORDER BY list
    (41) list -> . *
    (42) list -> . NAME
    (43) list -> . agg
    (44) list -> . NAME DOT NAME
    (35) agg -> . SUM LP NAME RP
    (36) agg -> . AVG LP NAME RP
    (37) agg -> . COUNT LP NAME RP
    (38) agg -> . MIN LP NAME RP
    (39) agg -> . MAX LP NAME RP
    (40) agg -> . COUNT LP * RP

    *               shift and go to state 7
    NAME            shift and go to state 8
    SUM             shift and go to state 10
    AVG             shift and go to state 11
    COUNT           shift and go to state 12
    MIN             shift and go to state 13
    MAX             shift and go to state 14

    list                           shift and go to state 6
    agg                            shift and go to state 9

state 5

    (2) query -> LP query . RP

    RP              shift and go to state 15


state 6

    (3) select -> SELECT list . FROM table
    (4) select -> SELECT list . FROM table WHERE lst
    (5) select -> SELECT list . FROM table ORDER BY list
    (6) select -> SELECT list . FROM table WHERE lst ORDER BY list

    FROM            shift and go to state 16


state 7

    (41) list -> * .

    FROM            reduce using rule 41 (list -> * .)
    $end            reduce using rule 41 (list -> * .)
    RP              reduce using rule 41 (list -> * .)


state 8

    (42) list -> NAME .
    (44) list -> NAME . DOT NAME

    FROM            reduce using rule 42 (list -> NAME .)
    $end            reduce using rule 42 (list -> NAME .)
    RP              reduce using rule 42 (list -> NAME .)
    DOT             shift and go to state 17


state 9

    (43) list -> agg .

    FROM            reduce using rule 43 (list -> agg .)
    $end            reduce using rule 43 (list -> agg .)
    RP              reduce using rule 43 (list -> agg .)


state 10

    (35) agg -> SUM . LP NAME RP

    LP              shift and go to state 18


state 11

    (36) agg -> AVG . LP NAME RP

    LP              shift and go to state 19


state 12

    (37) agg -> COUNT . LP NAME RP
    (40) agg -> COUNT . LP * RP

    LP              shift and go to state 20


state 13

    (38) agg -> MIN . LP NAME RP

    LP              shift and go to state 21


state 14

    (39) agg -> MAX . LP NAME RP

    LP              shift and go to state 22


state 15

    (2) query -> LP query RP .

    $end            reduce using rule 2 (query -> LP query RP .)
    RP              reduce using rule 2 (query -> LP query RP .)


state 16

    (3) select -> SELECT list FROM . table
    (4) select -> SELECT list FROM . table WHERE lst
    (5) select -> SELECT list FROM . table ORDER BY list
    (6) select -> SELECT list FROM . table WHERE lst ORDER BY list
    (7) table -> . NAME
    (8) table -> . LP query RP
    (9) table -> . NAME AS NAME
    (10) table -> . table AS NAME
    (11) table -> . table COMMA table

    NAME            shift and go to state 24
    LP              shift and go to state 25

    table                          shift and go to state 23

state 17

    (44) list -> NAME DOT . NAME

    NAME            shift and go to state 26


state 18

    (35) agg -> SUM LP . NAME RP

    NAME            shift and go to state 27


state 19

    (36) agg -> AVG LP . NAME RP

    NAME            shift and go to state 28


state 20

    (37) agg -> COUNT LP . NAME RP
    (40) agg -> COUNT LP . * RP

    NAME            shift and go to state 29
    *               shift and go to state 30


state 21

    (38) agg -> MIN LP . NAME RP

    NAME            shift and go to state 31


state 22

    (39) agg -> MAX LP . NAME RP

    NAME            shift and go to state 32


state 23

    (3) select -> SELECT list FROM table .
    (4) select -> SELECT list FROM table . WHERE lst
    (5) select -> SELECT list FROM table . ORDER BY list
    (6) select -> SELECT list FROM table . WHERE lst ORDER BY list
    (10) table -> table . AS NAME
    (11) table -> table . COMMA table

    $end            reduce using rule 3 (select -> SELECT list FROM table .)
    RP              reduce using rule 3 (select -> SELECT list FROM table .)
    WHERE           shift and go to state 33
    ORDER           shift and go to state 34
    AS              shift and go to state 35
    COMMA           shift and go to state 36


state 24

    (7) table -> NAME .
    (9) table -> NAME . AS NAME

  ! shift/reduce conflict for AS resolved as shift
    WHERE           reduce using rule 7 (table -> NAME .)
    ORDER           reduce using rule 7 (table -> NAME .)
    COMMA           reduce using rule 7 (table -> NAME .)
    $end            reduce using rule 7 (table -> NAME .)
    RP              reduce using rule 7 (table -> NAME .)
    AS              shift and go to state 37

  ! AS              [ reduce using rule 7 (table -> NAME .) ]


state 25

    (8) table -> LP . query RP
    (1) query -> . select
    (2) query -> . LP query RP
    (3) select -> . SELECT list FROM table
    (4) select -> . SELECT list FROM table WHERE lst
    (5) select -> . SELECT list FROM table ORDER BY list
    (6) select -> . SELECT list FROM table WHERE lst ORDER BY list

    LP              shift and go to state 3
    SELECT          shift and go to state 4

    query                          shift and go to state 38
    select                         shift and go to state 2

state 26

    (44) list -> NAME DOT NAME .

    FROM            reduce using rule 44 (list -> NAME DOT NAME .)
    $end            reduce using rule 44 (list -> NAME DOT NAME .)
    RP              reduce using rule 44 (list -> NAME DOT NAME .)


state 27

    (35) agg -> SUM LP NAME . RP

    RP              shift and go to state 39


state 28

    (36) agg -> AVG LP NAME . RP

    RP              shift and go to state 40


state 29

    (37) agg -> COUNT LP NAME . RP

    RP              shift and go to state 41


state 30

    (40) agg -> COUNT LP * . RP

    RP              shift and go to state 42


state 31

    (38) agg -> MIN LP NAME . RP

    RP              shift and go to state 43


state 32

    (39) agg -> MAX LP NAME . RP

    RP              shift and go to state 44


state 33

    (4) select -> SELECT list FROM table WHERE . lst
    (6) select -> SELECT list FROM table WHERE . lst ORDER BY list
    (12) lst -> . condition
    (13) lst -> . condition AND condition
    (14) lst -> . condition OR condition
    (15) lst -> . NAME BETWEEN NUMBER AND NUMBER
    (16) lst -> . NAME IN LP query RP
    (17) condition -> . NAME < agg
    (18) condition -> . NAME > agg
    (19) condition -> . NAME = agg
    (20) condition -> . agg > NUMBER
    (21) condition -> . agg = NUMBER
    (22) condition -> . agg < NUMBER
    (23) condition -> . NAME < NUMBER
    (24) condition -> . NAME > NUMBER
    (25) condition -> . NAME = NUMBER
    (26) condition -> . NAME < NAME
    (27) condition -> . NAME = NAME
    (28) condition -> . NAME > NAME
    (29) condition -> . NUMBER < NUMBER
    (30) condition -> . NUMBER > NUMBER
    (31) condition -> . NUMBER = NUMBER
    (32) condition -> . agg < agg
    (33) condition -> . agg > agg
    (34) condition -> . agg = agg
    (35) agg -> . SUM LP NAME RP
    (36) agg -> . AVG LP NAME RP
    (37) agg -> . COUNT LP NAME RP
    (38) agg -> . MIN LP NAME RP
    (39) agg -> . MAX LP NAME RP
    (40) agg -> . COUNT LP * RP

    NAME            shift and go to state 47
    NUMBER          shift and go to state 48
    SUM             shift and go to state 10
    AVG             shift and go to state 11
    COUNT           shift and go to state 12
    MIN             shift and go to state 13
    MAX             shift and go to state 14

    lst                            shift and go to state 45
    condition                      shift and go to state 46
    agg                            shift and go to state 49

state 34

    (5) select -> SELECT list FROM table ORDER . BY list

    BY              shift and go to state 50


state 35

    (10) table -> table AS . NAME

    NAME            shift and go to state 51


state 36

    (11) table -> table COMMA . table
    (7) table -> . NAME
    (8) table -> . LP query RP
    (9) table -> . NAME AS NAME
    (10) table -> . table AS NAME
    (11) table -> . table COMMA table

    NAME            shift and go to state 24
    LP              shift and go to state 25

    table                          shift and go to state 52

state 37

    (9) table -> NAME AS . NAME

    NAME            shift and go to state 53


state 38

    (8) table -> LP query . RP

    RP              shift and go to state 54


state 39

    (35) agg -> SUM LP NAME RP .

    FROM            reduce using rule 35 (agg -> SUM LP NAME RP .)
    >               reduce using rule 35 (agg -> SUM LP NAME RP .)
    =               reduce using rule 35 (agg -> SUM LP NAME RP .)
    <               reduce using rule 35 (agg -> SUM LP NAME RP .)
    $end            reduce using rule 35 (agg -> SUM LP NAME RP .)
    RP              reduce using rule 35 (agg -> SUM LP NAME RP .)
    AND             reduce using rule 35 (agg -> SUM LP NAME RP .)
    OR              reduce using rule 35 (agg -> SUM LP NAME RP .)
    ORDER           reduce using rule 35 (agg -> SUM LP NAME RP .)


state 40

    (36) agg -> AVG LP NAME RP .

    FROM            reduce using rule 36 (agg -> AVG LP NAME RP .)
    >               reduce using rule 36 (agg -> AVG LP NAME RP .)
    =               reduce using rule 36 (agg -> AVG LP NAME RP .)
    <               reduce using rule 36 (agg -> AVG LP NAME RP .)
    $end            reduce using rule 36 (agg -> AVG LP NAME RP .)
    RP              reduce using rule 36 (agg -> AVG LP NAME RP .)
    AND             reduce using rule 36 (agg -> AVG LP NAME RP .)
    OR              reduce using rule 36 (agg -> AVG LP NAME RP .)
    ORDER           reduce using rule 36 (agg -> AVG LP NAME RP .)


state 41

    (37) agg -> COUNT LP NAME RP .

    FROM            reduce using rule 37 (agg -> COUNT LP NAME RP .)
    >               reduce using rule 37 (agg -> COUNT LP NAME RP .)
    =               reduce using rule 37 (agg -> COUNT LP NAME RP .)
    <               reduce using rule 37 (agg -> COUNT LP NAME RP .)
    $end            reduce using rule 37 (agg -> COUNT LP NAME RP .)
    RP              reduce using rule 37 (agg -> COUNT LP NAME RP .)
    AND             reduce using rule 37 (agg -> COUNT LP NAME RP .)
    OR              reduce using rule 37 (agg -> COUNT LP NAME RP .)
    ORDER           reduce using rule 37 (agg -> COUNT LP NAME RP .)


state 42

    (40) agg -> COUNT LP * RP .

    FROM            reduce using rule 40 (agg -> COUNT LP * RP .)
    >               reduce using rule 40 (agg -> COUNT LP * RP .)
    =               reduce using rule 40 (agg -> COUNT LP * RP .)
    <               reduce using rule 40 (agg -> COUNT LP * RP .)
    $end            reduce using rule 40 (agg -> COUNT LP * RP .)
    RP              reduce using rule 40 (agg -> COUNT LP * RP .)
    AND             reduce using rule 40 (agg -> COUNT LP * RP .)
    OR              reduce using rule 40 (agg -> COUNT LP * RP .)
    ORDER           reduce using rule 40 (agg -> COUNT LP * RP .)


state 43

    (38) agg -> MIN LP NAME RP .

    FROM            reduce using rule 38 (agg -> MIN LP NAME RP .)
    >               reduce using rule 38 (agg -> MIN LP NAME RP .)
    =               reduce using rule 38 (agg -> MIN LP NAME RP .)
    <               reduce using rule 38 (agg -> MIN LP NAME RP .)
    $end            reduce using rule 38 (agg -> MIN LP NAME RP .)
    RP              reduce using rule 38 (agg -> MIN LP NAME RP .)
    AND             reduce using rule 38 (agg -> MIN LP NAME RP .)
    OR              reduce using rule 38 (agg -> MIN LP NAME RP .)
    ORDER           reduce using rule 38 (agg -> MIN LP NAME RP .)


state 44

    (39) agg -> MAX LP NAME RP .

    FROM            reduce using rule 39 (agg -> MAX LP NAME RP .)
    >               reduce using rule 39 (agg -> MAX LP NAME RP .)
    =               reduce using rule 39 (agg -> MAX LP NAME RP .)
    <               reduce using rule 39 (agg -> MAX LP NAME RP .)
    $end            reduce using rule 39 (agg -> MAX LP NAME RP .)
    RP              reduce using rule 39 (agg -> MAX LP NAME RP .)
    AND             reduce using rule 39 (agg -> MAX LP NAME RP .)
    OR              reduce using rule 39 (agg -> MAX LP NAME RP .)
    ORDER           reduce using rule 39 (agg -> MAX LP NAME RP .)


state 45

    (4) select -> SELECT list FROM table WHERE lst .
    (6) select -> SELECT list FROM table WHERE lst . ORDER BY list

    $end            reduce using rule 4 (select -> SELECT list FROM table WHERE lst .)
    RP              reduce using rule 4 (select -> SELECT list FROM table WHERE lst .)
    ORDER           shift and go to state 55


state 46

    (12) lst -> condition .
    (13) lst -> condition . AND condition
    (14) lst -> condition . OR condition

    ORDER           reduce using rule 12 (lst -> condition .)
    $end            reduce using rule 12 (lst -> condition .)
    RP              reduce using rule 12 (lst -> condition .)
    AND             shift and go to state 56
    OR              shift and go to state 57


state 47

    (15) lst -> NAME . BETWEEN NUMBER AND NUMBER
    (16) lst -> NAME . IN LP query RP
    (17) condition -> NAME . < agg
    (18) condition -> NAME . > agg
    (19) condition -> NAME . = agg
    (23) condition -> NAME . < NUMBER
    (24) condition -> NAME . > NUMBER
    (25) condition -> NAME . = NUMBER
    (26) condition -> NAME . < NAME
    (27) condition -> NAME . = NAME
    (28) condition -> NAME . > NAME

    BETWEEN         shift and go to state 58
    IN              shift and go to state 59
    <               shift and go to state 60
    >               shift and go to state 61
    =               shift and go to state 62


state 48

    (29) condition -> NUMBER . < NUMBER
    (30) condition -> NUMBER . > NUMBER
    (31) condition -> NUMBER . = NUMBER

    <               shift and go to state 63
    >               shift and go to state 64
    =               shift and go to state 65


state 49

    (20) condition -> agg . > NUMBER
    (21) condition -> agg . = NUMBER
    (22) condition -> agg . < NUMBER
    (32) condition -> agg . < agg
    (33) condition -> agg . > agg
    (34) condition -> agg . = agg

    >               shift and go to state 66
    =               shift and go to state 67
    <               shift and go to state 68


state 50

    (5) select -> SELECT list FROM table ORDER BY . list
    (41) list -> . *
    (42) list -> . NAME
    (43) list -> . agg
    (44) list -> . NAME DOT NAME
    (35) agg -> . SUM LP NAME RP
    (36) agg -> . AVG LP NAME RP
    (37) agg -> . COUNT LP NAME RP
    (38) agg -> . MIN LP NAME RP
    (39) agg -> . MAX LP NAME RP
    (40) agg -> . COUNT LP * RP

    *               shift and go to state 7
    NAME            shift and go to state 8
    SUM             shift and go to state 10
    AVG             shift and go to state 11
    COUNT           shift and go to state 12
    MIN             shift and go to state 13
    MAX             shift and go to state 14

    list                           shift and go to state 69
    agg                            shift and go to state 9

state 51

    (10) table -> table AS NAME .

    WHERE           reduce using rule 10 (table -> table AS NAME .)
    ORDER           reduce using rule 10 (table -> table AS NAME .)
    AS              reduce using rule 10 (table -> table AS NAME .)
    COMMA           reduce using rule 10 (table -> table AS NAME .)
    $end            reduce using rule 10 (table -> table AS NAME .)
    RP              reduce using rule 10 (table -> table AS NAME .)


state 52

    (11) table -> table COMMA table .
    (10) table -> table . AS NAME
    (11) table -> table . COMMA table

  ! shift/reduce conflict for AS resolved as shift
  ! shift/reduce conflict for COMMA resolved as shift
    WHERE           reduce using rule 11 (table -> table COMMA table .)
    ORDER           reduce using rule 11 (table -> table COMMA table .)
    $end            reduce using rule 11 (table -> table COMMA table .)
    RP              reduce using rule 11 (table -> table COMMA table .)
    AS              shift and go to state 35
    COMMA           shift and go to state 36

  ! AS              [ reduce using rule 11 (table -> table COMMA table .) ]
  ! COMMA           [ reduce using rule 11 (table -> table COMMA table .) ]


state 53

    (9) table -> NAME AS NAME .

    WHERE           reduce using rule 9 (table -> NAME AS NAME .)
    ORDER           reduce using rule 9 (table -> NAME AS NAME .)
    AS              reduce using rule 9 (table -> NAME AS NAME .)
    COMMA           reduce using rule 9 (table -> NAME AS NAME .)
    $end            reduce using rule 9 (table -> NAME AS NAME .)
    RP              reduce using rule 9 (table -> NAME AS NAME .)


state 54

    (8) table -> LP query RP .

    WHERE           reduce using rule 8 (table -> LP query RP .)
    ORDER           reduce using rule 8 (table -> LP query RP .)
    AS              reduce using rule 8 (table -> LP query RP .)
    COMMA           reduce using rule 8 (table -> LP query RP .)
    $end            reduce using rule 8 (table -> LP query RP .)
    RP              reduce using rule 8 (table -> LP query RP .)


state 55

    (6) select -> SELECT list FROM table WHERE lst ORDER . BY list

    BY              shift and go to state 70


state 56

    (13) lst -> condition AND . condition
    (17) condition -> . NAME < agg
    (18) condition -> . NAME > agg
    (19) condition -> . NAME = agg
    (20) condition -> . agg > NUMBER
    (21) condition -> . agg = NUMBER
    (22) condition -> . agg < NUMBER
    (23) condition -> . NAME < NUMBER
    (24) condition -> . NAME > NUMBER
    (25) condition -> . NAME = NUMBER
    (26) condition -> . NAME < NAME
    (27) condition -> . NAME = NAME
    (28) condition -> . NAME > NAME
    (29) condition -> . NUMBER < NUMBER
    (30) condition -> . NUMBER > NUMBER
    (31) condition -> . NUMBER = NUMBER
    (32) condition -> . agg < agg
    (33) condition -> . agg > agg
    (34) condition -> . agg = agg
    (35) agg -> . SUM LP NAME RP
    (36) agg -> . AVG LP NAME RP
    (37) agg -> . COUNT LP NAME RP
    (38) agg -> . MIN LP NAME RP
    (39) agg -> . MAX LP NAME RP
    (40) agg -> . COUNT LP * RP

    NAME            shift and go to state 72
    NUMBER          shift and go to state 48
    SUM             shift and go to state 10
    AVG             shift and go to state 11
    COUNT           shift and go to state 12
    MIN             shift and go to state 13
    MAX             shift and go to state 14

    condition                      shift and go to state 71
    agg                            shift and go to state 49

state 57

    (14) lst -> condition OR . condition
    (17) condition -> . NAME < agg
    (18) condition -> . NAME > agg
    (19) condition -> . NAME = agg
    (20) condition -> . agg > NUMBER
    (21) condition -> . agg = NUMBER
    (22) condition -> . agg < NUMBER
    (23) condition -> . NAME < NUMBER
    (24) condition -> . NAME > NUMBER
    (25) condition -> . NAME = NUMBER
    (26) condition -> . NAME < NAME
    (27) condition -> . NAME = NAME
    (28) condition -> . NAME > NAME
    (29) condition -> . NUMBER < NUMBER
    (30) condition -> . NUMBER > NUMBER
    (31) condition -> . NUMBER = NUMBER
    (32) condition -> . agg < agg
    (33) condition -> . agg > agg
    (34) condition -> . agg = agg
    (35) agg -> . SUM LP NAME RP
    (36) agg -> . AVG LP NAME RP
    (37) agg -> . COUNT LP NAME RP
    (38) agg -> . MIN LP NAME RP
    (39) agg -> . MAX LP NAME RP
    (40) agg -> . COUNT LP * RP

    NAME            shift and go to state 72
    NUMBER          shift and go to state 48
    SUM             shift and go to state 10
    AVG             shift and go to state 11
    COUNT           shift and go to state 12
    MIN             shift and go to state 13
    MAX             shift and go to state 14

    condition                      shift and go to state 73
    agg                            shift and go to state 49

state 58

    (15) lst -> NAME BETWEEN . NUMBER AND NUMBER

    NUMBER          shift and go to state 74


state 59

    (16) lst -> NAME IN . LP query RP

    LP              shift and go to state 75


state 60

    (17) condition -> NAME < . agg
    (23) condition -> NAME < . NUMBER
    (26) condition -> NAME < . NAME
    (35) agg -> . SUM LP NAME RP
    (36) agg -> . AVG LP NAME RP
    (37) agg -> . COUNT LP NAME RP
    (38) agg -> . MIN LP NAME RP
    (39) agg -> . MAX LP NAME RP
    (40) agg -> . COUNT LP * RP

    NUMBER          shift and go to state 78
    NAME            shift and go to state 76
    SUM             shift and go to state 10
    AVG             shift and go to state 11
    COUNT           shift and go to state 12
    MIN             shift and go to state 13
    MAX             shift and go to state 14

    agg                            shift and go to state 77

state 61

    (18) condition -> NAME > . agg
    (24) condition -> NAME > . NUMBER
    (28) condition -> NAME > . NAME
    (35) agg -> . SUM LP NAME RP
    (36) agg -> . AVG LP NAME RP
    (37) agg -> . COUNT LP NAME RP
    (38) agg -> . MIN LP NAME RP
    (39) agg -> . MAX LP NAME RP
    (40) agg -> . COUNT LP * RP

    NUMBER          shift and go to state 81
    NAME            shift and go to state 79
    SUM             shift and go to state 10
    AVG             shift and go to state 11
    COUNT           shift and go to state 12
    MIN             shift and go to state 13
    MAX             shift and go to state 14

    agg                            shift and go to state 80

state 62

    (19) condition -> NAME = . agg
    (25) condition -> NAME = . NUMBER
    (27) condition -> NAME = . NAME
    (35) agg -> . SUM LP NAME RP
    (36) agg -> . AVG LP NAME RP
    (37) agg -> . COUNT LP NAME RP
    (38) agg -> . MIN LP NAME RP
    (39) agg -> . MAX LP NAME RP
    (40) agg -> . COUNT LP * RP

    NUMBER          shift and go to state 84
    NAME            shift and go to state 82
    SUM             shift and go to state 10
    AVG             shift and go to state 11
    COUNT           shift and go to state 12
    MIN             shift and go to state 13
    MAX             shift and go to state 14

    agg                            shift and go to state 83

state 63

    (29) condition -> NUMBER < . NUMBER

    NUMBER          shift and go to state 85


state 64

    (30) condition -> NUMBER > . NUMBER

    NUMBER          shift and go to state 86


state 65

    (31) condition -> NUMBER = . NUMBER

    NUMBER          shift and go to state 87


state 66

    (20) condition -> agg > . NUMBER
    (33) condition -> agg > . agg
    (35) agg -> . SUM LP NAME RP
    (36) agg -> . AVG LP NAME RP
    (37) agg -> . COUNT LP NAME RP
    (38) agg -> . MIN LP NAME RP
    (39) agg -> . MAX LP NAME RP
    (40) agg -> . COUNT LP * RP

    NUMBER          shift and go to state 89
    SUM             shift and go to state 10
    AVG             shift and go to state 11
    COUNT           shift and go to state 12
    MIN             shift and go to state 13
    MAX             shift and go to state 14

    agg                            shift and go to state 88

state 67

    (21) condition -> agg = . NUMBER
    (34) condition -> agg = . agg
    (35) agg -> . SUM LP NAME RP
    (36) agg -> . AVG LP NAME RP
    (37) agg -> . COUNT LP NAME RP
    (38) agg -> . MIN LP NAME RP
    (39) agg -> . MAX LP NAME RP
    (40) agg -> . COUNT LP * RP

    NUMBER          shift and go to state 91
    SUM             shift and go to state 10
    AVG             shift and go to state 11
    COUNT           shift and go to state 12
    MIN             shift and go to state 13
    MAX             shift and go to state 14

    agg                            shift and go to state 90

state 68

    (22) condition -> agg < . NUMBER
    (32) condition -> agg < . agg
    (35) agg -> . SUM LP NAME RP
    (36) agg -> . AVG LP NAME RP
    (37) agg -> . COUNT LP NAME RP
    (38) agg -> . MIN LP NAME RP
    (39) agg -> . MAX LP NAME RP
    (40) agg -> . COUNT LP * RP

    NUMBER          shift and go to state 93
    SUM             shift and go to state 10
    AVG             shift and go to state 11
    COUNT           shift and go to state 12
    MIN             shift and go to state 13
    MAX             shift and go to state 14

    agg                            shift and go to state 92

state 69

    (5) select -> SELECT list FROM table ORDER BY list .

    $end            reduce using rule 5 (select -> SELECT list FROM table ORDER BY list .)
    RP              reduce using rule 5 (select -> SELECT list FROM table ORDER BY list .)


state 70

    (6) select -> SELECT list FROM table WHERE lst ORDER BY . list
    (41) list -> . *
    (42) list -> . NAME
    (43) list -> . agg
    (44) list -> . NAME DOT NAME
    (35) agg -> . SUM LP NAME RP
    (36) agg -> . AVG LP NAME RP
    (37) agg -> . COUNT LP NAME RP
    (38) agg -> . MIN LP NAME RP
    (39) agg -> . MAX LP NAME RP
    (40) agg -> . COUNT LP * RP

    *               shift and go to state 7
    NAME            shift and go to state 8
    SUM             shift and go to state 10
    AVG             shift and go to state 11
    COUNT           shift and go to state 12
    MIN             shift and go to state 13
    MAX             shift and go to state 14

    list                           shift and go to state 94
    agg                            shift and go to state 9

state 71

    (13) lst -> condition AND condition .

    ORDER           reduce using rule 13 (lst -> condition AND condition .)
    $end            reduce using rule 13 (lst -> condition AND condition .)
    RP              reduce using rule 13 (lst -> condition AND condition .)


state 72

    (17) condition -> NAME . < agg
    (18) condition -> NAME . > agg
    (19) condition -> NAME . = agg
    (23) condition -> NAME . < NUMBER
    (24) condition -> NAME . > NUMBER
    (25) condition -> NAME . = NUMBER
    (26) condition -> NAME . < NAME
    (27) condition -> NAME . = NAME
    (28) condition -> NAME . > NAME

    <               shift and go to state 60
    >               shift and go to state 61
    =               shift and go to state 62


state 73

    (14) lst -> condition OR condition .

    ORDER           reduce using rule 14 (lst -> condition OR condition .)
    $end            reduce using rule 14 (lst -> condition OR condition .)
    RP              reduce using rule 14 (lst -> condition OR condition .)


state 74

    (15) lst -> NAME BETWEEN NUMBER . AND NUMBER

    AND             shift and go to state 95


state 75

    (16) lst -> NAME IN LP . query RP
    (1) query -> . select
    (2) query -> . LP query RP
    (3) select -> . SELECT list FROM table
    (4) select -> . SELECT list FROM table WHERE lst
    (5) select -> . SELECT list FROM table ORDER BY list
    (6) select -> . SELECT list FROM table WHERE lst ORDER BY list

    LP              shift and go to state 3
    SELECT          shift and go to state 4

    query                          shift and go to state 96
    select                         shift and go to state 2

state 76

    (26) condition -> NAME < NAME .

    AND             reduce using rule 26 (condition -> NAME < NAME .)
    OR              reduce using rule 26 (condition -> NAME < NAME .)
    ORDER           reduce using rule 26 (condition -> NAME < NAME .)
    $end            reduce using rule 26 (condition -> NAME < NAME .)
    RP              reduce using rule 26 (condition -> NAME < NAME .)


state 77

    (17) condition -> NAME < agg .

    AND             reduce using rule 17 (condition -> NAME < agg .)
    OR              reduce using rule 17 (condition -> NAME < agg .)
    ORDER           reduce using rule 17 (condition -> NAME < agg .)
    $end            reduce using rule 17 (condition -> NAME < agg .)
    RP              reduce using rule 17 (condition -> NAME < agg .)


state 78

    (23) condition -> NAME < NUMBER .

    AND             reduce using rule 23 (condition -> NAME < NUMBER .)
    OR              reduce using rule 23 (condition -> NAME < NUMBER .)
    ORDER           reduce using rule 23 (condition -> NAME < NUMBER .)
    $end            reduce using rule 23 (condition -> NAME < NUMBER .)
    RP              reduce using rule 23 (condition -> NAME < NUMBER .)


state 79

    (28) condition -> NAME > NAME .

    AND             reduce using rule 28 (condition -> NAME > NAME .)
    OR              reduce using rule 28 (condition -> NAME > NAME .)
    ORDER           reduce using rule 28 (condition -> NAME > NAME .)
    $end            reduce using rule 28 (condition -> NAME > NAME .)
    RP              reduce using rule 28 (condition -> NAME > NAME .)


state 80

    (18) condition -> NAME > agg .

    AND             reduce using rule 18 (condition -> NAME > agg .)
    OR              reduce using rule 18 (condition -> NAME > agg .)
    ORDER           reduce using rule 18 (condition -> NAME > agg .)
    $end            reduce using rule 18 (condition -> NAME > agg .)
    RP              reduce using rule 18 (condition -> NAME > agg .)


state 81

    (24) condition -> NAME > NUMBER .

    AND             reduce using rule 24 (condition -> NAME > NUMBER .)
    OR              reduce using rule 24 (condition -> NAME > NUMBER .)
    ORDER           reduce using rule 24 (condition -> NAME > NUMBER .)
    $end            reduce using rule 24 (condition -> NAME > NUMBER .)
    RP              reduce using rule 24 (condition -> NAME > NUMBER .)


state 82

    (27) condition -> NAME = NAME .

    AND             reduce using rule 27 (condition -> NAME = NAME .)
    OR              reduce using rule 27 (condition -> NAME = NAME .)
    ORDER           reduce using rule 27 (condition -> NAME = NAME .)
    $end            reduce using rule 27 (condition -> NAME = NAME .)
    RP              reduce using rule 27 (condition -> NAME = NAME .)


state 83

    (19) condition -> NAME = agg .

    AND             reduce using rule 19 (condition -> NAME = agg .)
    OR              reduce using rule 19 (condition -> NAME = agg .)
    ORDER           reduce using rule 19 (condition -> NAME = agg .)
    $end            reduce using rule 19 (condition -> NAME = agg .)
    RP              reduce using rule 19 (condition -> NAME = agg .)


state 84

    (25) condition -> NAME = NUMBER .

    AND             reduce using rule 25 (condition -> NAME = NUMBER .)
    OR              reduce using rule 25 (condition -> NAME = NUMBER .)
    ORDER           reduce using rule 25 (condition -> NAME = NUMBER .)
    $end            reduce using rule 25 (condition -> NAME = NUMBER .)
    RP              reduce using rule 25 (condition -> NAME = NUMBER .)


state 85

    (29) condition -> NUMBER < NUMBER .

    AND             reduce using rule 29 (condition -> NUMBER < NUMBER .)
    OR              reduce using rule 29 (condition -> NUMBER < NUMBER .)
    ORDER           reduce using rule 29 (condition -> NUMBER < NUMBER .)
    $end            reduce using rule 29 (condition -> NUMBER < NUMBER .)
    RP              reduce using rule 29 (condition -> NUMBER < NUMBER .)


state 86

    (30) condition -> NUMBER > NUMBER .

    AND             reduce using rule 30 (condition -> NUMBER > NUMBER .)
    OR              reduce using rule 30 (condition -> NUMBER > NUMBER .)
    ORDER           reduce using rule 30 (condition -> NUMBER > NUMBER .)
    $end            reduce using rule 30 (condition -> NUMBER > NUMBER .)
    RP              reduce using rule 30 (condition -> NUMBER > NUMBER .)


state 87

    (31) condition -> NUMBER = NUMBER .

    AND             reduce using rule 31 (condition -> NUMBER = NUMBER .)
    OR              reduce using rule 31 (condition -> NUMBER = NUMBER .)
    ORDER           reduce using rule 31 (condition -> NUMBER = NUMBER .)
    $end            reduce using rule 31 (condition -> NUMBER = NUMBER .)
    RP              reduce using rule 31 (condition -> NUMBER = NUMBER .)


state 88

    (33) condition -> agg > agg .

    AND             reduce using rule 33 (condition -> agg > agg .)
    OR              reduce using rule 33 (condition -> agg > agg .)
    ORDER           reduce using rule 33 (condition -> agg > agg .)
    $end            reduce using rule 33 (condition -> agg > agg .)
    RP              reduce using rule 33 (condition -> agg > agg .)


state 89

    (20) condition -> agg > NUMBER .

    AND             reduce using rule 20 (condition -> agg > NUMBER .)
    OR              reduce using rule 20 (condition -> agg > NUMBER .)
    ORDER           reduce using rule 20 (condition -> agg > NUMBER .)
    $end            reduce using rule 20 (condition -> agg > NUMBER .)
    RP              reduce using rule 20 (condition -> agg > NUMBER .)


state 90

    (34) condition -> agg = agg .

    AND             reduce using rule 34 (condition -> agg = agg .)
    OR              reduce using rule 34 (condition -> agg = agg .)
    ORDER           reduce using rule 34 (condition -> agg = agg .)
    $end            reduce using rule 34 (condition -> agg = agg .)
    RP              reduce using rule 34 (condition -> agg = agg .)


state 91

    (21) condition -> agg = NUMBER .

    AND             reduce using rule 21 (condition -> agg = NUMBER .)
    OR              reduce using rule 21 (condition -> agg = NUMBER .)
    ORDER           reduce using rule 21 (condition -> agg = NUMBER .)
    $end            reduce using rule 21 (condition -> agg = NUMBER .)
    RP              reduce using rule 21 (condition -> agg = NUMBER .)


state 92

    (32) condition -> agg < agg .

    AND             reduce using rule 32 (condition -> agg < agg .)
    OR              reduce using rule 32 (condition -> agg < agg .)
    ORDER           reduce using rule 32 (condition -> agg < agg .)
    $end            reduce using rule 32 (condition -> agg < agg .)
    RP              reduce using rule 32 (condition -> agg < agg .)


state 93

    (22) condition -> agg < NUMBER .

    AND             reduce using rule 22 (condition -> agg < NUMBER .)
    OR              reduce using rule 22 (condition -> agg < NUMBER .)
    ORDER           reduce using rule 22 (condition -> agg < NUMBER .)
    $end            reduce using rule 22 (condition -> agg < NUMBER .)
    RP              reduce using rule 22 (condition -> agg < NUMBER .)


state 94

    (6) select -> SELECT list FROM table WHERE lst ORDER BY list .

    $end            reduce using rule 6 (select -> SELECT list FROM table WHERE lst ORDER BY list .)
    RP              reduce using rule 6 (select -> SELECT list FROM table WHERE lst ORDER BY list .)


state 95

    (15) lst -> NAME BETWEEN NUMBER AND . NUMBER

    NUMBER          shift and go to state 97


state 96

    (16) lst -> NAME IN LP query . RP

    RP              shift and go to state 98


state 97

    (15) lst -> NAME BETWEEN NUMBER AND NUMBER .

    ORDER           reduce using rule 15 (lst -> NAME BETWEEN NUMBER AND NUMBER .)
    $end            reduce using rule 15 (lst -> NAME BETWEEN NUMBER AND NUMBER .)
    RP              reduce using rule 15 (lst -> NAME BETWEEN NUMBER AND NUMBER .)


state 98

    (16) lst -> NAME IN LP query RP .

    ORDER           reduce using rule 16 (lst -> NAME IN LP query RP .)
    $end            reduce using rule 16 (lst -> NAME IN LP query RP .)
    RP              reduce using rule 16 (lst -> NAME IN LP query RP .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for AS in state 24 resolved as shift
WARNING: shift/reduce conflict for AS in state 52 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 52 resolved as shift
